---
title: "L06 Ensemble Models"
subtitle: "Data Science 3 with R (STAT 301-3)"
author: "YOUR NAME"

format:
  html:
    toc: true
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    
execute:
  warning: false

from: markdown+emoji 
---

::: {.callout-tip icon=false}

## Github Repo Link

To link to your github **repo**sitory, appropriately edit the example link below. Meaning replace `https://your-github-repo-url` with your github repo url. Suggest verifying the link works before submitting.

[https://your-github-repo-url](https://your-github-repo-url)

:::

## Overview

The main goal of this lab is to introduce and build an ensemble model using `{stacks}`. Reading and reviewing `{stacks}`'s [homepage](https://stacks.tidymodels.org/index.html) and the [Getting Started with stacks vignette](https://stacks.tidymodels.org/articles/basics.html). The latter of which will be very helpful since we will be following the general workflow that is outlined in it.

## Dataset

We will be utilizing `wildfires.csv` dataset contained in the **data** subdirectory. `wildfires_codebook.html` provides a quick overview of the data which is where students should begin.

## Instructions

We want to build an ensemble model to predict the number of hectares burned by a wildfire (`burned`). 

We will use all available predictors except for (`wlf`) which we used as an outcome variable in Lab 2. 

We will build the ensemble model by blending nearest neighbor models, a linear regression model, and support vector machine models using radial basis function kernel.

Much of the general code has been setup for you, but there are incomplete sections where you need to add or complete the code. You are also encouraged to add extra notes and comments for your own notes/reference.

### Steps

#### `general_setup.R`

Work through `general_setup.R` to complete the initial setup/organization of the data. There is one section of code left blank for exploring the outcome and checking missingness which should be completed. 

#### Tuning/fitting scripts

The next step is to define the candidate models and tune/fit them to resamples. Note that this framework for this process is *almost* exactly the same as we have been following for tuning and fitting to resamples. 

There is one essential argument to add to `tune_grid()` or `fit_resamples()`. Students will need to add this argument where appropriate in the `knn_tunning.R`, `lin_reg_fitting.R` and `svm_tuning.R` scripts.

#### Building the ensemble model

The `ensemble_model.R` script gets the students started, but most of the code used to train and assess the ensemble model is left blank. There are headings to help guide students through this process. The [Getting Started with stacks vignette](https://stacks.tidymodels.org/articles/basics.html){target="_blank"} will be especially useful for this portion of the lab.

## What should be turned in
## What should be turned in

An short report/executive summary/memo outlining the results with a link at the top to the associated GitHub repo. 

The short report should include a brief description/exploration of the ensemble model. How many total models were considered? How many were ultimately included in the ensemble model and their weights? Assess the performance of the ensemble model on the test set. Compare the ensemble models performance to its member models. Graphs and tables (expected to be nicely formatted) will be useful for this. 
